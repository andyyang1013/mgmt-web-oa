<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yxy.oa.mapper.SysRoleMapper">

    <resultMap id="customResultMap" type="com.yxy.oa.entity.SysRole">
        <result property="id" column="id"/>
        <result property="disabled" column="disabled"/>
        <result property="roleCode" column="role_code"/>
        <result property="roleName" column="role_name"/>
        <result property="systemType" column="system_type"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="createUid" column="create_uid"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateUid" column="update_uid"/>
    </resultMap>

    <sql id="columns">
		id,
		disabled,
		role_code,
		role_name,
		description,
		create_time,
		create_uid,
		update_time,
		update_uid
	</sql>

    <!--批量插入角色和权限的关系表-->
    <insert id="insertPermRelations" parameterType="java.util.List">
        insert into t_sys_role_permission (id ,role_id ,permission_id ,create_time ,create_uid ,update_time ,update_uid)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{item.id} , #{item.roleId} , #{item.permissionId} , #{item.createTime} , #{item.createUid} ,
            #{item.updateTime} , #{item.updateUid})
        </foreach>
    </insert>


    <!--根据用户Id查询角色列表 被禁用的也查询 -->
    <select id="getRolesByUserId" parameterType="java.lang.Long" resultMap="customResultMap">
		SELECT * FROM t_sys_role WHERE id IN (SELECT ur.role_id FROM t_sys_user_role ur WHERE ur.user_id = #{userId})
		order by update_time desc
	</select>

    <delete id="deletePermRelationsByRoleId" parameterType="java.lang.Long">
		 DELETE FROM t_sys_role_permission WHERE role_id = #{roleId}
	</delete>

    <delete id="deleteUsersByRoleId" parameterType="java.lang.Long">
		DELETE FROM t_sys_user_role WHERE role_id = #{roleId}
	</delete>

    <select id="selectByRoleName" resultMap="customResultMap">
		SELECT
			`id`,
			`disabled`,
			`system_type`,
			`role_code`,
			`role_name`,
			`description`,
			`create_time`,
			`create_uid`,
			`update_time`,
			`update_uid`
			FROM
			 `t_sys_role`
			 WHERE role_name = #{roleName}
	</select>

	<select id="getPermissionIdsByRoleId" resultType="java.lang.Long">
		select permission_id from t_sys_role_permission rp
		left join t_sys_permission p on rp.permission_id = p.id
		where p.resource_type = 2 and rp.role_id =  #{roleId}
	</select>
</mapper>

